git init
git add tic_tac_toe.py
git commit -m "Initial commit - Tic-Tac-Toe game"
git remote add origin https://github.com/your-username/tic-tac-toe.git
git branch -M main
git push -u origin main
echo "# Tic-Tac-Toe
def print_board(board):
    print("\n")
    for row in board:
        print(" | ".join(row))
        print("-" * 5)
    print("\n")

def check_win(board, player):
    # Check rows, columns and diagonals
    for i in range(3):
        if all([cell == player for cell in board[i]]):  # Check row
            return True
        if all([board[j][i] == player for j in range(3)]):  # Check column
            return True
    # Check diagonals
    if all([board[i][i] == player for i in range(3)]):  # Left-to-right
        return True
    if all([board[i][2 - i] == player for i in range(3)]):  # Right-to-left
        return True
    return False

def is_draw(board):
    return all(cell in ['X', 'O'] for row in board for cell in row)

def play_game():
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"

    print("Welcome to Tic-Tac-Toe!")
    print_board(board)

    while True:
        try:
            row = int(input(f"Player {current_player}, enter row (0-2): "))
            col = int(input(f"Player {current_player}, enter column (0-2): "))
        except ValueError:
            print("Invalid input. Please enter a number from 0 to 2.")
            continue

        if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == " ":
            board[row][col] = current_player
            print_board(board)

            if check_win(board, current_player):
                print(f"ðŸŽ‰ Player {current_player} wins!")
                break
            elif is_draw(board):
                print("It's a draw!")
                break

            current_player = "O" if current_player == "X" else "X"
        else:
            print("Invalid move. Try again.")

if __name__ == "__main__":
    play_game()

